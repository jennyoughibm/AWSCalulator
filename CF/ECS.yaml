AWSCalculatorECSCluster:
  Type: AWS::ECS::Cluster
  Properties:
    ClusterName: AWSCalculatorECSCluster

AWSCalculatorECSService:
  Type: AWS::ECS::Service
  DependsOn: WebListenerRule
  Properties:
    Cluster: !Ref AWSCalculatorECSCluster
    DesiredCount: 1
    LaunchType: FARGATE
    LoadBalancers:
      - ContainerName: AWSCalculator
        ContainerPort: 8080
        TargetGroupArn: !Ref AppTargetGroup
    NetworkConfiguration:
      AwsvpcConfiguration:
        AssignPublicIp: DISABLED
        Subnets:
          - Fn::ImportValue: !Sub ${EnvironmentName}:SubnetAZ1Private
          - Fn::ImportValue: !Sub ${EnvironmentName}:SubnetAZ2Private
        SecurityGroups:
          - !Ref ContainerSecurityGroup
    ServiceName: !Sub aws-calculator-${EnvironmentName}
    TaskDefinition: !Ref AWSCalculatorTaskDefinition
    DeploymentConfiguration:
      MaximumPercent: 200
      MinimumHealthyPercent: 50

CloudWatchLogsGroup:
  Type: AWS::Logs::LogGroup
  Properties:
    LogGroupName: /aws/ecs/calculator
    RetentionInDays: 7

AWSCalculatorTaskDefinition:
  Type: AWS::ECS::TaskDefinition
  Properties:
    Cpu: "256"
    Memory: "512"
    ExecutionRoleArn: !Ref ECSTaskRole
    Family: aws-calculator
    NetworkMode: awsvpc
    RequiresCompatibilities:
      - FARGATE
    ContainerDefinitions:
      -
        Name: AWSCalculator
        Image: # <image_link>
        PortMappings:
          - ContainerPort: 8080
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group: !Ref CloudWatchLogsGroup
            awslogs-region: !Ref AWS::Region
            awslogs-stream-prefix: aws-calculator


ECSTaskRole:
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
    Path: /
    Policies:
      - PolicyName: AWSCalculatorAmazonECSTaskExecutionRolePolicy
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - 'ecr:GetAuthorizationToken'
                - 'ecr:BatchCheckLayerAvailability'
                - 'ecr:GetDownloadUrlForLayer'
                - 'ecr:BatchGetImage'
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: '*'
